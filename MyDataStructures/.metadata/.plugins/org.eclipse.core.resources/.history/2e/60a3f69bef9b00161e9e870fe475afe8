import static org.junit.Assert.*;

import java.util.Comparator;
import java.util.NoSuchElementException;

import org.junit.Test;


public class MyBinaryTreeTest {

	@Test
	public void testInsert() {
		fail("Not yet implemented");
	}

	@Test
	public void testContains() {
		fail("Not yet implemented");
	}

	@Test
	public void testClearEmpty() {
		fail("Not yet implemented");
	}

	@Test
	public void testDelete() {
		fail("Not yet implemented");
	}

	@Test
	public void testInOrderRep() {
		fail("Not yet implemented");
	}
	
	@Test (expected = NoSuchElementException.class)
	public void testDeleteException(){
		MyBinaryTree<Integer> m = new MyBinaryTree<Integer>(new MyComparator());
		m.insert(6); m.insert(2); m.insert(7);
		m.delete(1); //1  not in tree should error
	}

	private static class MyComparator implements Comparator<Integer>{
		@Override
		public int compare(Integer arg0, Integer arg1) {
			return  arg0.intValue() < arg1.intValue() ? -1 : arg0.intValue() == arg1.intValue() ? 0 : 1;
		}
		
	}
	
}
